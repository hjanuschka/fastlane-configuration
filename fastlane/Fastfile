# Fix the fastlane version so that we don't get any surprises while deploying.
fastlane_version '1.48.0'

#############################
### Environment variables ###
#############################

# The environment variables below can also be setup in Jenkins. If so the lines below
# don't have to be set in this Fastfile.

# You have to set your iTunes Connect username and password in order to authenticate
# with Apple's iTunes Connect portal so you can upload the build to TestFlight.
ENV['PILOT_USERNAME'] = 'Your iTunes Connect username'
ENV['PILOT_PASSWORD'] = 'Your iTunes Connect password'

# You have to set the HockeyApp token in order to authenticate with HockeyApp.
ENV['FL_HOCKEY_API_TOKEN'] = 'Your HockeyApp API token'

# The Splunk environment variables to authenticate.
ENV['FL_SPLUNKMINT_API_KEY'] = 'Your Splunk API key'
ENV['FL_SPLUNKMINT_API_TOKEN'] = 'Your Splunk API token'

# The incoming webhook for our iCapps Slack account.
ENV['SLACK_URL'] = 'https://hooks.slack.com/services/...'

# You have to set your iTunes Connect username and password in order to authenticate
# with Apple's iTunes Connect portal. This will usually be the same as your PILOT
# credentials.
ENV['FASTLANE_USERNAME'] = ENV['PILOT_USERNAME']
ENV['FASTLANE_PASSWORD'] = ENV['PILOT_PASSWORD']

###############
### CI LANE ###
###############

lane :ci do
  build # Run the build lane.
  tests        # Run the tests lane.
end

###################
### HOCKEY LANE ###
###################

lane :hockey do
  bump_version # Run the bump_version lane.
  build        # Run the build lane.
  tests        # Run the tests lane.

  # Upload the application to HockeyApp. You can find more information on the used keys
  # below in the HockeyApp documentation.
  # (http://support.hockeyapp.net/kb/api/api-versions#upload-version)
  hockey(
    ipa:       './location/of/application.ipa', # optional, will try to locate the correct ipa file.
    notes:     'What\'s new?',                  # optional, will be empty otherwise
    tags:      'tags, on, hockey',              # optional, will be empty otherwise
    notify:    '1'                              # optional, will be 0 otherwise
  )
end

#######################
### TESTFLIGHT LANE ###
#######################

lane :testflight do
  bump_version # Run the bump_version lane.
  build        # Run the build lane.
  tests        # Run the tests lane.

  # Upload the application to Apple's Testflight.
  pilot(
    app_identifier:  'com.icapps.app',
    ipa:             './location/of/application.ipa', # optional, will try to locate the correct ipa file.
    skip_submission: true                             # Don't automagically submit for review.
  )

  # Upload the dSYM to Splunk.
  splunkmint(
    dsym: './location/of/application.dSYM.zip'
  )
end

#####################
### PRIVATE LANES ###
#####################

private_lane :build do
  # Build the application.
  gym(
    workspace:            'Project.xcworkspace',           # optional, the workspace to build.
    scheme:               'Application Scheme',            # optional, the scheme to build.
    configuration:        'Release',                       # optional, the configuration to build.
    clean:                true,                            # optional, Clean the project before building.
    output_name:          './location/of/application.ipa', # optional, define the location of the ipa build.
    output_directory:     './location',                    # optional, the output directory to build.
    use_legacy_build_api: true                             # Needs to be set, because of a open radar.
  )
end

private_lane :tests do
  # Run the application tests.
  xctest(
    workspace:     'Project.xcworkspace',                        # optional, the workspace to build.
    scheme:        'Application Scheme',                         # optional, the scheme to build.
    configuration: 'Release',                                    # optional, the configuration to build.
    clean:         true,                                         # optional, Clean the project before building.
    destination:   'platform=iOS Simulator,name=iPhone 6,OS=9.0' # optional, define on which device to run.
  )
end

private_lane :bump_version do
  # Increment the build version number, commit the bump and push the tag.
  increment_build_number
  commit_version_bump
  add_git_tag
  push_to_git_remote
end

#################
### Callbacks ###
#################

# Post a notification to Slack every time a lane was successful.
after_all do |lane|
  slack(
    channel:          '#slack-room',
    success:           true
    default_payloads: [:lane, :test_result]
  )
end

# When an error occurs we post a failure notification to Slack.
error do |lane, exception|
  slack(
    message:          exception.message,
    channel:          '#slack-room',
    success:           true
    default_payloads: [:lane, :test_result]
  )
end
